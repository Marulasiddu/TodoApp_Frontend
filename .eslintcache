[{"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\index.js":"1","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\App.js":"2","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reportWebVitals.js":"3","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\navbar\\Navbar.js":"4","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\button\\Button.js":"5","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\menuitems\\MenuItems.js":"6","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\pages\\Home.js":"7","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\pages\\Signup.js":"8","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\pages\\ContactMe.js":"9","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\todo\\Todo.js":"10","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\createtodo\\CreateTodo.js":"11","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\createtodos.js":"12","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\types.js":"13","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\index.js":"14","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\todo.js":"15","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\history.js":"16","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\gettodos.js":"17","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\fetchallTodos.js":"18","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\ErrorReducer.js":"19","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\updatetodoReducer.js":"20","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\updatetodo\\UpdateTodo.js":"21","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\updatetodo.js":"22","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\deletetodo.js":"23"},{"size":712,"mtime":1609877338671,"results":"24","hashOfConfig":"25"},{"size":924,"mtime":1609921921914,"results":"26","hashOfConfig":"25"},{"size":362,"mtime":1606306440968,"results":"27","hashOfConfig":"25"},{"size":1755,"mtime":1609858455369,"results":"28","hashOfConfig":"25"},{"size":247,"mtime":1609704387774,"results":"29","hashOfConfig":"25"},{"size":447,"mtime":1609705423621,"results":"30","hashOfConfig":"25"},{"size":294,"mtime":1609940399477,"results":"31","hashOfConfig":"25"},{"size":183,"mtime":1609740589034,"results":"32","hashOfConfig":"25"},{"size":945,"mtime":1609938676181,"results":"33","hashOfConfig":"25"},{"size":4509,"mtime":1609940511031,"results":"34","hashOfConfig":"25"},{"size":2636,"mtime":1609940532777,"results":"35","hashOfConfig":"25"},{"size":770,"mtime":1609940271155,"results":"36","hashOfConfig":"25"},{"size":193,"mtime":1609930008219,"results":"37","hashOfConfig":"25"},{"size":453,"mtime":1609923785074,"results":"38","hashOfConfig":"25"},{"size":298,"mtime":1609863761751,"results":"39","hashOfConfig":"25"},{"size":97,"mtime":1609865401271,"results":"40","hashOfConfig":"25"},{"size":304,"mtime":1609872253456,"results":"41","hashOfConfig":"25"},{"size":499,"mtime":1609873403375,"results":"42","hashOfConfig":"25"},{"size":306,"mtime":1609879103490,"results":"43","hashOfConfig":"25"},{"size":314,"mtime":1609925365216,"results":"44","hashOfConfig":"25"},{"size":2893,"mtime":1609940370437,"results":"45","hashOfConfig":"25"},{"size":799,"mtime":1609931251445,"results":"46","hashOfConfig":"25"},{"size":569,"mtime":1609931797161,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1edyb4v",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"50"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"50"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"99"},"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\index.js",[],["100","101"],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\App.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reportWebVitals.js",[],["102","103"],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\navbar\\Navbar.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\button\\Button.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\menuitems\\MenuItems.js",[],["104","105"],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\pages\\Home.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\pages\\Signup.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\pages\\ContactMe.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\todo\\Todo.js",["106","107"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { fetch_todos } from '../../actions/fetchallTodos';\r\nimport { delete_todo } from '../../actions/deletetodo';\r\nimport { update_todo } from '../../actions/updatetodo';\r\nimport './Todo.css'\r\nconst Actions = {fetch_todos , delete_todo, update_todo }\r\n\r\n\r\nclass Todo extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.handleDelete = this.handleDelete.bind(this);\r\n    }\r\n\r\n    handleDelete(data){\r\n        console.log(data.id)\r\n        this.props.delete_todo(data.id)\r\n        \r\n    }\r\n\r\n    handleEdit(data){\r\n        this.props.update_todo(data)\r\n        // this.props.history.push('/')\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.props.fetch_todos()\r\n    }\r\n\r\n    // componentWillReceiveProps(props){\r\n    //     this.props.fetch_todos()\r\n    // }\r\n\r\n    render() {\r\n        const {allData} = this.props;\r\n        const filteredData = allData.alldata && allData.alldata.filter((item)=>{\r\n                if(item.status === 'DONE'){\r\n                    return item\r\n                }\r\n        })\r\n      \r\n\r\n        return (\r\n            <React.Fragment>\r\n            <div className=\"table1\">\r\n                <div className=\"title\"><span style={{color:\"black\", fontSize:\"900\"}} >{`Todos`}</span></div>\r\n                <table className=\"blueTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>ID</th>\r\n                            <th>Title</th>\r\n                            <th>Description</th>\r\n                            <th>Status</th>\r\n                            <th>Edit</th>\r\n                            <th>Delete</th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {allData.alldata && allData.alldata.filter((item) => {if(item.status !== 'DONE') return item}).map((data, index) =>{\r\n                            return (\r\n                                <tr key={index}>\r\n                                    <td>{data.id}</td>\r\n                                    <td>{data.title}</td>\r\n                                    <td>{data.todoDescription}</td>\r\n                                    <td>{data.status}</td>\r\n                                    <td><button className=\"edit_button\" onClick={() => this.handleEdit(data)}>\r\n                                    <Link to='/update-Todo' >Edit</Link>\r\n                                    </button></td>\r\n                                    <td><button className=\"delete_button\" onClick={() => this.handleDelete(data)}>Delete</button></td>\r\n                                </tr>\r\n                            )\r\n                        })} \r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n\r\n            <div className=\"table2\">\r\n            <div className=\"title\"><span style={{color:\"white\"}}>{`Done`}</span></div>\r\n            <table className=\"blueTable\">\r\n                <thead>\r\n                    <tr>\r\n                        <td>Id</td>\r\n                        <th>Title</th>\r\n                        <th>Description</th>\r\n                        <th>Status</th>\r\n                        <th>Edit</th>\r\n                        <th>Delete</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                {filteredData && filteredData.map((data, index) =>{\r\n                    return (\r\n                        <tr key={index}>\r\n                            <td>{data.id}</td>\r\n                            <td>{data.title}</td>\r\n                            <td>{data.todoDescription}</td>\r\n                            <td>{data.status}</td>\r\n                            <td><button className=\"edit_button\" onClick={() => this.handleEdit(data)}>\r\n                            <Link to='/update-Todo' >Edit</Link>\r\n                            </button></td>\r\n                            <td><button className=\"delete_button\" onClick={() => this.handleDelete(data)}>Delete</button></td>\r\n                        </tr>\r\n                    )\r\n                })} \r\n                </tbody>\r\n            </table>\r\n\r\n            </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return{\r\n        todoData: state.todo,\r\n        errors: state.errors,\r\n        allData: state.alltodo\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, Actions)(Todo);","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\createtodo\\CreateTodo.js",["108"],"import React, { Component } from 'react';\r\nimport {send_todo} from '../../actions/createtodos';\r\nimport {fetch_todos} from '../../actions/fetchallTodos';\r\nimport { connect } from 'react-redux';\r\nimport './CreateTodo.css';\r\n\r\nconst Actions = { send_todo, fetch_todos }\r\n\r\n\r\nclass CreateTodo extends Component {\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            title: '',\r\n            todoDescription: '',\r\n            status: '',\r\n            \r\n        }\r\n        this.onChangeHandler = this.onChangeHandler.bind(this);\r\n        this.submitMessage = this.submitMessage.bind(this)\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps){\r\n        if(nextProps.errors){\r\n            this.setState({errors: nextProps.errors})\r\n        }\r\n    }\r\n\r\n    onChangeHandler(event){\r\n        this.setState({[event.target.name]: event.target.value});\r\n    }\r\n    \r\n\r\n    submitMessage = (event) => {\r\n        event.preventDefault();\r\n        const {title, todoDescription, status} = this.state\r\n        this.props.send_todo({title, todoDescription, status});\r\n        this.setState({\r\n            title: '',\r\n            todoDescription: '',\r\n            status:''\r\n        })\r\n        this.props.fetch_todos();\r\n        this.props.history.push('/')\r\n        \r\n    }\r\n\r\n\r\n    render() {\r\n        const {errors} = this.state;\r\n        const {title, todoDescription, status} = this.state;\r\n        return (\r\n            <div className=\"home\">\r\n            <div className=\"creat-todo-cont\">\r\n                <h2 >Create Todo</h2>\r\n                <input type=\"text\" value={title} name=\"title\" className=\"form-control form-control-lg\" placeholder=\"title\" onChange={this.onChangeHandler} />\r\n                \r\n                <input type=\"text\" value={todoDescription} name=\"todoDescription\" className=\"form-control form-control-lg\" placeholder=\"description\" onChange={this.onChangeHandler} />\r\n                <div className=\"form-group\">\r\n                    <select className=\"form-control form-control-lg\" name=\"status\" value={status} onChange={this.onChangeHandler}>\r\n                        <option value=\"\">Select Status</option>\r\n                        <option value=\"TO_DO\">TO DO</option>\r\n                        <option value=\"IN_PROGRESS\">IN PROGRESS</option>\r\n                        <option value=\"DONE\">DONE</option>\r\n                    </select>\r\n                </div>\r\n                <input type=\"submit\" onClick={this.submitMessage} className=\"btn btn-primary btn-block mt-4\" />\r\n                \r\n            </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, Actions)(CreateTodo);","C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\createtodos.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\types.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\index.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\todo.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\history.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\gettodos.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\fetchallTodos.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\ErrorReducer.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\reducers\\updatetodoReducer.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\components\\updatetodo\\UpdateTodo.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\updatetodo.js",[],"C:\\Spring_tuts\\fractal_analytics_test\\todoapp_frontend\\src\\actions\\deletetodo.js",[],["109","110"],{"ruleId":"111","replacedBy":"112"},{"ruleId":"113","replacedBy":"114"},{"ruleId":"111","replacedBy":"115"},{"ruleId":"113","replacedBy":"116"},{"ruleId":"111","replacedBy":"117"},{"ruleId":"113","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":38,"column":78,"nodeType":"121","messageId":"122","endLine":38,"endColumn":80},{"ruleId":"119","severity":1,"message":"120","line":61,"column":75,"nodeType":"121","messageId":"122","endLine":61,"endColumn":77},{"ruleId":"123","severity":1,"message":"124","line":50,"column":16,"nodeType":"125","messageId":"126","endLine":50,"endColumn":22},{"ruleId":"111","replacedBy":"127"},{"ruleId":"113","replacedBy":"128"},"no-native-reassign",["129"],"no-negated-in-lhs",["130"],["129"],["130"],["129"],["130"],"array-callback-return","Array.prototype.filter() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'errors' is assigned a value but never used.","Identifier","unusedVar",["129"],["130"],"no-global-assign","no-unsafe-negation"]